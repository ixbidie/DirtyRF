#!/usr/bin/python

import dirtyrf
import numpy as np
import matplotlib.pyplot as plt

# generate random 4QAM symbols
# \param n number of samples
def gen4QAM(n):
  valSet = [-1, 1]
  i = np.round(np.random.random(n))
  q = np.round(np.random.random(n))
  return i-0.5 + (q-0.5)*1j

# p is smoothness factor
# A is the clipping amplitude
#def calcIIP(p, A):


def example1():
  sim = dirtyrf.DirtyRF(beta=5, IIP3=2.2, IIP5=1.4, alpha=0.8, phi=0.2, Ts=1e-6)
  x = gen4QAM(200)

  y1 = np.asarray(map(sim.pn, x))
  y2 = np.asarray(map(sim.nl, x))
  y3 = np.asarray(map(sim.iq, x))
  y4 = np.asarray(map(sim.impairments, x))
  
  n = 128.0
  end = 4
  d1 = []
  d2 = np.arange(end, step=end/n)
  for i in range(0,int(n)):
    val = end * i / n
    d1.append(abs(sim.nl(val)))
  
  plt.figure("NL mapping")
  plt.plot(d2, d1)
  
  plt.figure("NL, IQ, PN")
  plt.subplot(221)
  plt.title('NL')
  plt.plot(y2.real, y2.imag, 'ro', label='output')
  plt.plot(x.real, x.imag, 'bo', label='input')
  
  plt.subplot(222)
  plt.title('IQ')
  plt.plot(y3.real, y3.imag, 'ro')
  plt.plot(x.real, x.imag, 'bo')
  
  plt.subplot(223)
  plt.title('PN')
  plt.plot(y1.real, y1.imag, 'ro')
  plt.plot(x.real, x.imag, '  bo')
  
  plt.subplot(224)
  plt.title('ALL')
  plt.plot(y4.real, y4.imag, 'ro')
  plt.plot(x.real, x.imag, 'bo')
  
  plt.show() 


example1()